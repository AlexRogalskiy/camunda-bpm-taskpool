---
title: 'Contributing'
---

There are several ways in which you may contribute to this project.

* https://github.com/holuda-io/camunda-bpm-taskpool/issues[File issues]
* Submit a pull requests

Read more on how to get the project up and running below.


== Submit a Pull Request

If you would like to submit a pull request make sure to 

- add test cases for the problem you are solving
- stick to project coding conventions


== Project Setup

Perform the following steps to get a development setup up and running.

- `git clone https://github.com/holunda-io/camunda-bpm-taskpool.git`
- `cd camunda-bpm-taskpool`
- `./mvnw clean install`

== Maven Profiles

=== Integration Tests

By default, the build command will ignore the run of `failsafe` Maven plugin executing the integration tests 
(usual JUnit tests with class names ending with ITest). In order to run integration tests, please
call from your command line: 

----
./mvnw integration-test failsafe:verify -Pitest -DskipFrontend
----

=== Camunda Version

You can choose the used Camunda version by specifying the profile camunda-ee or camunda-ce.
Specify `-Pcamunda-ee` to switch to Camunda Enterprise edition.

=== Skip Frontend

If you are interested in backend only, specify the `-DskipFrontend` switch.

== Version control

We are using gitflow in our git SCM. That means that you should start from `develop` branch,
create a `feature/<name>` out of it and once it is completed create a pull request containing 
it. Please squash your commits before submitting and use semantic commit messages, if possible. 
