---
title: Motivation
---

== Motivation and Goal

In the last years, we built several process applications and process platforms on behalf of the customers using Camunda BPM Engine.
In doing so, we were able to extract common requirements, especially if the task-oriented application has been implemented.
The requirements were basic and independent of the frontend implementation technology. It turned out that some issues occurred
every time during the implementation.

These were:

* coping with performance issues of Camunda BPM Engine by the big amount of tasks available (total tasks, tasks per user)
* creating high-performance custom queries for pre-loading process variables for tasks
* creating high-performance custom queries to pre-load business data associated with the running process instance
* high-performance re-ordering (sorting) of user tasks
* high-performance retrieving of tasks from several process engines
* repetitive queries with same result
* creating an archive view for business data items handled during the process execution
* creating an audit log of changes performed on business data items

Since we were developing customer software, we found solutions to those requirements and gathered experience in applying
different approaches for that. Some issues listed above result from fact that data on a single user task is being read
much more often than written, depending on the user count. For systems with a big amount of users this becomes a serious
performance issue and needs to be addressed.

A possible solution to most of those issues listed above is to create a special component which has a read-optimized representation of tasks.
Such component acts as a cache for tasks and allows for serving a high amount of queries without any performance impact to the process engine
itself at the costs of loosing strong consistency (and working with eventual-consistent task list).

We successfully applied this approach by multiple customers and identified the high initial invest as a main drawback of the solution.
The goal of this project is to provide a component as a free and open source library, to be used as a foundation for creation of process platforms
for Camunda BPM engine. It can also be used as an integration layer for custom process applications, custom user task lists and other
components of process automation solutions.
