---
title: 'Release'
---

Release management has been set-up for use of Sonatype Nexus (= Maven Central)

== Continuous Integration

Travis CI is building all branches on commit hook. In addition, a private-hosted Jenkins CI
is used to build the releases.

== What modules get deployed to repository

Every module is enabled by default. If you want to change this, please provide the property

[source,xml]
----
<maven.deploy.skip>true</maven.deploy.skip>
----
   
inside your `pom.xml`.

== Trigger new release

NOTE: This operation requires special permissions.

We use gitflow for development (see http://nvie.com/posts/a-successful-git-branching-model/[A successful git branching model] 
for more details). You could use gitflow with native git commands, but then you would have 
to change the versions in the poms manually. Therefore we use the 
https://github.com/aleksandr-m/gitflow-maven-plugin/[mvn gitflow plugin], which handles this and other 
things nicely.

You can build a release with:

[source,sh]
----
./mvnw -B gitflow:release-start gitflow:release-finish
----

	
This will update the versions in the `pom.xml`s accordingly and push the release tag to the `master` branch
and update the `develop` branch for the new development version.

By default, this command will bump the revision digit in the version. If you want to specify the version 
yourself, please specify the switch `-Drelease.version=x.y.z`

== Trigger a deploy

NOTE: This operation requires special permissions.

Currently, CI support for deployment of artifacts to Maven Central is executed on Holisticon Jenkins and
no manual intervention is required. If you still want to execute the the deployment from your local machine,
you need to execute the following command on the `master` branch:

[source,sh]
----
./mvnw clean deploy -B -DskipTests -Prelease
----

== Release to public

NOTE: This operation requires special permissions.

The deploy job will publish the artifacts to Nexus OSS staging repositories. Don't forget to close and release the 
repository to enable it's sync with Maven Central.


== References

* https://www.phillip-kruger.com/post/continuous_integration_to_maven_central/ (primary)
* https://docs.travis-ci.com/user/deployment
* https://blog.travis-ci.com/2017-03-30-deploy-maven-travis-ci-packagecloud/
