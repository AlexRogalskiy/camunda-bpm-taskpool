<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>io.holunda.taskpool</groupId>
    <artifactId>camunda-bpm-taskpool-examples-root</artifactId>
    <version>1.2.21-SNAPSHOT</version>
  </parent>

  <artifactId>camunda-bpm-taskpool-example-process-application</artifactId>
  <name>example/${project.artifactId}</name>

  <properties>
    <application.api-location>src/main/api</application.api-location>
    <application.base-package>io.holunda.camunda.taskpool.example.process.rest</application.base-package>
    <application.api-package>${application.base-package}.api</application.api-package>
    <application.model-package>${application.base-package}.model</application.model-package>
    <application.config-package>${application.base-package}</application.config-package>
    <maven.deploy.skip>true</maven.deploy.skip>
  </properties>

  <dependencies>
    <dependency>
      <groupId>io.holunda.taskpool</groupId>
      <artifactId>camunda-bpm-taskpool-engine-springboot-starter</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>io.holunda.taskpool</groupId>
      <artifactId>camunda-bpm-datapool-collector</artifactId>
    </dependency>
    <dependency>
      <groupId>io.holunda.taskpool</groupId>
      <artifactId>camunda-bpm-taskpool-example-users</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>io.springfox</groupId>
      <artifactId>springfox-swagger2</artifactId>
      <version>2.9.2</version>
    </dependency>
    <dependency>
      <groupId>io.toolisticon.springboot</groupId>
      <artifactId>springboot-swagger-starter</artifactId>
      <version>0.0.4</version>
    </dependency>
    <dependency>
      <groupId>org.axonframework</groupId>
      <artifactId>axon-spring-boot-starter</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-webflux</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-data-jpa</artifactId>
    </dependency>
    <dependency>
      <groupId>org.flywaydb</groupId>
      <artifactId>flyway-core</artifactId>
    </dependency>
    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
    </dependency>
    <dependency>
      <groupId>org.codehaus.groovy</groupId>
      <artifactId>groovy-all</artifactId>
    </dependency>
    <!-- SPIN -->
    <dependency>
      <groupId>org.camunda.bpm</groupId>
      <artifactId>camunda-engine-plugin-spin</artifactId>
      <version>${camunda.version}</version>
    </dependency>
    <dependency>
      <groupId>org.camunda.spin</groupId>
      <artifactId>camunda-spin-dataformat-json-jackson</artifactId>
      <version>${version.camunda.spin}</version>
    </dependency>
    <dependency>
      <groupId>org.camunda.spin</groupId>
      <artifactId>camunda-spin-core</artifactId>
      <version>${version.camunda.spin}</version>
    </dependency>

    <dependency>
      <groupId>com.fasterxml.jackson.datatype</groupId>
      <artifactId>jackson-datatype-jsr310</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.datatype</groupId>
      <artifactId>jackson-datatype-jdk8</artifactId>
    </dependency>

    <dependency>
      <groupId>com.fasterxml.jackson.module</groupId>
      <artifactId>jackson-module-kotlin</artifactId>
    </dependency>
    <dependency>
      <groupId>io.github.microutils</groupId>
      <artifactId>kotlin-logging</artifactId>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <executions>

          <execution>
            <id>copy-swagger-api</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/swagger</outputDirectory>
              <resources>
                <resource>
                  <directory>${application.api-location}</directory>
                  <includes>
                    <include>swagger.yml</include>
                  </includes>
                </resource>
              </resources>
            </configuration>
          </execution>


          <execution>
            <id>copy-swagger-ignore</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/generated-sources/swagger
              </outputDirectory>
              <resources>
                <resource>
                  <directory>${application.api-location}</directory>
                  <includes>
                    <include>.swagger-codegen-ignore</include>
                  </includes>
                </resource>
              </resources>
            </configuration>
          </execution>

          <!-- Enforce resource copy -->
          <!-- This is a fix of Kotlin incremental Compiler bug -->
          <!-- See https://discuss.kotlinlang.org/t/kotlin-compiler-incremental-not-copying-resources/5640/5 -->
          <execution>
            <id>extra-copy-resources</id>
            <phase>process-classes</phase>
            <goals>
              <goal>resources</goal>
            </goals>
          </execution>
          <execution>
            <id>extra-copy-test-resources</id>
            <phase>process-test-classes</phase>
            <goals>
              <goal>testResources</goal>
            </goals>
          </execution>

        </executions>
      </plugin>

      <!-- Order matters! -->
      <plugin>
        <!-- generate spring controller stubs -->
        <groupId>io.swagger</groupId>
        <artifactId>swagger-codegen-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>generate-server-stubs</id>
            <phase>process-sources</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <inputSpec>${project.build.directory}/swagger/swagger.yml</inputSpec>
              <templateDirectory>src/main/swagger-templates</templateDirectory>
              <language>spring</language>
              <apiPackage>${application.api-package}</apiPackage>
              <modelPackage>${application.model-package}</modelPackage>
              <modelNamePrefix />
              <modelNameSuffix>Dto</modelNameSuffix>
              <configOptions>
                <interfaceOnly>true</interfaceOnly>
                <basePackage>${application.base-package}</basePackage>
                <configPackage>${application.config-package}</configPackage>
                <swaggerDocketConfig>false</swaggerDocketConfig>
                <dateLibrary>java8</dateLibrary>
                <useOptional>true</useOptional>
                <bigDecimalAsString>true</bigDecimalAsString>
                <useBeanValidation>true</useBeanValidation>
              </configOptions>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <!-- kotlin compiler -->
        <artifactId>kotlin-maven-plugin</artifactId>
        <groupId>org.jetbrains.kotlin</groupId>
        <version>${kotlin.version}</version>
        <executions>
          <execution>
            <id>kapt</id>
            <goals>
              <goal>kapt</goal>
            </goals>
            <configuration>
              <sourceDirs>
                <sourceDir>${project.basedir}/target/generated-sources/swagger/src/main/java
                </sourceDir>
                <sourceDir>src/main/kotlin</sourceDir>
              </sourceDirs>
              <annotationProcessorPaths>
                <annotationProcessorPath>
                  <groupId>org.mapstruct</groupId>
                  <artifactId>mapstruct-processor</artifactId>
                  <version>${org.mapstruct.version}</version>
                </annotationProcessorPath>
              </annotationProcessorPaths>
            </configuration>
          </execution>
          <execution>
            <id>compile</id>
            <goals>
              <goal>compile</goal>
            </goals>
            <configuration>
              <sourceDirs>
                <sourceDir>${project.basedir}/target/generated-sources/swagger/src/main/java
                </sourceDir>
                <sourceDir>${project.basedir}/src/main/kotlin</sourceDir>
              </sourceDirs>
            </configuration>
          </execution>
          <execution>
            <id>test-compile</id>
            <goals>
              <goal>test-compile</goal>
            </goals>
            <configuration>
              <sourceDirs>
                <sourceDir>${project.basedir}/src/test/kotlin</sourceDir>
              </sourceDirs>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- java compiler -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
      </plugin>
      <plugin>
        <!-- for packaging springboot application -->
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>frontend</id>
      <activation>
        <property>
          <name>!skipFrontend</name>
        </property>
      </activation>
      <dependencies>
        <dependency>
          <groupId>io.holunda.taskpool</groupId>
          <artifactId>camunda-bpm-taskpool-example-process-forms</artifactId>
          <version>${project.version}</version>
        </dependency>
      </dependencies>
    </profile>
    <profile>
      <id>camunda-ce</id>
      <activation>
        <property>
          <name>!camunda-ee</name>
        </property>
      </activation>
      <dependencies>
        <dependency>
          <groupId>org.camunda.bpm.springboot</groupId>
          <artifactId>camunda-bpm-spring-boot-starter-webapp</artifactId>
        </dependency>
      </dependencies>
    </profile>
    <profile>
      <id>camunda-ee</id>
      <activation>
        <property>
          <name>camunda-ee</name>
        </property>
      </activation>
      <dependencies>
        <dependency>
          <groupId>org.camunda.bpm.springboot</groupId>
          <artifactId>camunda-bpm-spring-boot-starter-webapp-ee</artifactId>
        </dependency>
      </dependencies>
    </profile>
  </profiles>


</project>
