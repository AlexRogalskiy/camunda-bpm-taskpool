sudo: false
language: java
jdk:
  - openjdk8
cache:
  directories:
  - $HOME/.m2
#
# Load GPG secrets and make mvnw executable
#
before_install:
  - chmod +x mvnw
  - sudo apt-get install jq
  - curl $(curl https://api.github.com/repos/codacy/codacy-coverage-reporter/releases/latest | jq -r '.assets | map({content_type, browser_download_url} | select(.content_type | contains("application/x-java-archive"))) | .[0].browser_download_url') -o codacy-coverage-reporter-assembly.jar
#
# Skip installation
#
install: true
#
# Verify
#
script:
  - ./mvnw --settings .travis/settings.xml clean verify -T4 -U -B
  - ./mvnw --settings .travis/settings.xml integration-test failsafe:verify -Pitest -DskipFrontend -B
#
# Coveralls
#
after_success:
- bash <(curl -s https://codecov.io/bash)
- java -jar ~/codacy-coverage-reporter-assembly.jar report -l Kotlin -r datapool-api/target/site/jacoco-ut/jacoco.xml --partial
- java -jar ~/codacy-coverage-reporter-assembly.jar report -l Kotlin -r datapool-core/target/site/jacoco-ut/jacoco.xml --partial
- java -jar ~/codacy-coverage-reporter-assembly.jar report -l Kotlin -r engine/camunda-engine-client/target/site/jacoco-ut/jacoco.xml --partial
- java -jar ~/codacy-coverage-reporter-assembly.jar report -l Kotlin -r engine/camunda-engine-plugin/target/site/jacoco-ut/jacoco.xml --partial
- java -jar ~/codacy-coverage-reporter-assembly.jar report -l Kotlin -r engine/datapool-collector/target/site/jacoco-ut/jacoco.xml --partial
- java -jar ~/codacy-coverage-reporter-assembly.jar report -l Kotlin -r engine/taskpool-collector/target/site/jacoco-ut/jacoco.xml --partial
- java -jar ~/codacy-coverage-reporter-assembly.jar report -l Kotlin -r engine/taskpool-engine-springboot-starter/target/site/jacoco-ut/jacoco.xml --partial
- java -jar ~/codacy-coverage-reporter-assembly.jar report -l Kotlin -r engine/variable-serializer/target/site/jacoco-ut/jacoco.xml --partial
- java -jar ~/codacy-coverage-reporter-assembly.jar report -l Kotlin -r taskpool/taskpool-api/target/site/jacoco-ut/jacoco.xml --partial
- java -jar ~/codacy-coverage-reporter-assembly.jar report -l Kotlin -r taskpool/taskpool-core/target/site/jacoco-ut/jacoco.xml --partial
- java -jar ~/codacy-coverage-reporter-assembly.jar report -l Kotlin -r view/mongo/target/site/jacoco-ut/jacoco.xml --partial
- java -jar ~/codacy-coverage-reporter-assembly.jar report -l Kotlin -r view/simple/target/site/jacoco-ut/jacoco.xml --partial
- java -jar ~/codacy-coverage-reporter-assembly.jar report -l Kotlin -r view/view-api/target/site/jacoco-ut/jacoco.xml --partial
- java -jar ~/codacy-coverage-reporter-assembly.jar final

#
# Notify slack channel
#
notifications:
  slack: holunda:OBhk0v6b16pLFphCq3siuDIZ

#
# Deploy of artifacts is only triggered on master branch.
#
#before_deploy:
#  - echo $GPG_SECRET_KEYS | base64 --decode | $GPG_EXECUTABLE --import
#  - echo $GPG_OWNERTRUST | base64 --decode | $GPG_EXECUTABLE --import-ownertrust
#
# Deploy doesn't work properly because travis rounds-robin the external IP address
# Deploy will be executed on all branches matching the condition.
# This is the branch name must match x.y.z
# Github handles git tags as "branches" and triggers a build here.
# The result is a branch named x.y.z having a tag.
#
#deploy:
#  skip_cleanup: true
#  provider: script
#  script: "./mvnw --settings .travis/settings.xml deploy -DskipNodeBuild=true -DskipTests=true -B -Prelease"
#  on:
#    all_branches: true
#    condition: $TRAVIS_BRANCH =~ ^[[:digit:]]*\.[[:digit:]]*\.[[:digit:]]*$
#    tags: true
