name: Build the docs

on:
  push:
    branches:
      - master
      - develop
      - '**/*'
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Upgrade pip
        run: |
          # install pip=>20.1 to use "pip cache dir"
          python3 -m pip install --upgrade pip

      - name: Get pip cache dir
        id: pip-cache
        run: echo "::set-output name=dir::$(pip cache dir)"

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.pip-cache.outputs.dir }}
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: python3 -m pip install -r ./docs/requirements.txt

      - name: Set git username and email
        run: |
          #
          git config --global user.email "${GH_USERNAME}@users.noreply.github.com"
          git config --global user.name "${GH_USERNAME}"
        env:
          GH_USERNAME: ${{ github.actor }}

      - name: Fetch the gh-pages branch
        run: git fetch

      - name: Build docs with MkDocs
        run: mkdocs build

      - name: Only do this when tagged
        id: get_tag_name
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          echo "Hello tag ${{ github.ref }}"
          run: echo ::set-output name=TAG_NAME::${GITHUB_REF/refs\/tags\//}

      - name: Create a new version for the tag
        if: startsWith(github.ref, 'refs/tags/')
        run: mike deploy ${{ steps.get_tag_name.outputs.TAG_NAME }} latest

      - name: Deploy latest docs to GH pages.
        run: mike deploy latest --push --rebase

      - name: Deploy latest docs to GH pages.
        if: github.ref == 'refs/heads/develop'
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./site
          cname: www.holunda.io
          commit_message: "Published with MkDocs "
